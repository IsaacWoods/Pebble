(function() {var implementors = {};
implementors["hal"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.BootInfo.html\" title=\"struct hal::boot_info::BootInfo\">BootInfo</a>","synthetic":true,"types":["hal::boot_info::BootInfo"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.MemoryMap.html\" title=\"struct hal::boot_info::MemoryMap\">MemoryMap</a>","synthetic":true,"types":["hal::boot_info::MemoryMap"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.MemoryMapEntry.html\" title=\"struct hal::boot_info::MemoryMapEntry\">MemoryMapEntry</a>","synthetic":true,"types":["hal::boot_info::MemoryMapEntry"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.LoadedImages.html\" title=\"struct hal::boot_info::LoadedImages\">LoadedImages</a>","synthetic":true,"types":["hal::boot_info::LoadedImages"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.LoadedImage.html\" title=\"struct hal::boot_info::LoadedImage\">LoadedImage</a>","synthetic":true,"types":["hal::boot_info::LoadedImage"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.Segment.html\" title=\"struct hal::boot_info::Segment\">Segment</a>","synthetic":true,"types":["hal::boot_info::Segment"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/boot_info/struct.VideoModeInfo.html\" title=\"struct hal::boot_info::VideoModeInfo\">VideoModeInfo</a>","synthetic":true,"types":["hal::boot_info::VideoModeInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hal/boot_info/enum.MemoryType.html\" title=\"enum hal::boot_info::MemoryType\">MemoryType</a>","synthetic":true,"types":["hal::boot_info::MemoryType"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hal/boot_info/enum.PixelFormat.html\" title=\"enum hal::boot_info::PixelFormat\">PixelFormat</a>","synthetic":true,"types":["hal::boot_info::PixelFormat"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"hal/memory/struct.Frame.html\" title=\"struct hal::memory::Frame\">Frame</a>&lt;S&gt;","synthetic":true,"types":["hal::memory::frame::Frame"]},{"text":"impl&lt;S&gt; Freeze for <a class=\"struct\" href=\"hal/memory/struct.Page.html\" title=\"struct hal::memory::Page\">Page</a>&lt;S&gt;","synthetic":true,"types":["hal::memory::page::Page"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/memory/struct.Flags.html\" title=\"struct hal::memory::Flags\">Flags</a>","synthetic":true,"types":["hal::memory::paging::Flags"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/memory/struct.PhysicalAddress.html\" title=\"struct hal::memory::PhysicalAddress\">PhysicalAddress</a>","synthetic":true,"types":["hal::memory::physical_address::PhysicalAddress"]},{"text":"impl Freeze for <a class=\"struct\" href=\"hal/memory/struct.VirtualAddress.html\" title=\"struct hal::memory::VirtualAddress\">VirtualAddress</a>","synthetic":true,"types":["hal::memory::virtual_address::VirtualAddress"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hal/memory/enum.PagingError.html\" title=\"enum hal::memory::PagingError\">PagingError</a>","synthetic":true,"types":["hal::memory::paging::PagingError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hal/memory/enum.Size4KiB.html\" title=\"enum hal::memory::Size4KiB\">Size4KiB</a>","synthetic":true,"types":["hal::memory::Size4KiB"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hal/memory/enum.Size2MiB.html\" title=\"enum hal::memory::Size2MiB\">Size2MiB</a>","synthetic":true,"types":["hal::memory::Size2MiB"]},{"text":"impl Freeze for <a class=\"enum\" href=\"hal/memory/enum.Size1GiB.html\" title=\"enum hal::memory::Size1GiB\">Size1GiB</a>","synthetic":true,"types":["hal::memory::Size1GiB"]}];
implementors["kernel"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/heap_allocator/struct.HoleAllocator.html\" title=\"struct kernel::heap_allocator::HoleAllocator\">HoleAllocator</a>","synthetic":true,"types":["kernel::heap_allocator::HoleAllocator"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/heap_allocator/struct.LockedHoleAllocator.html\" title=\"struct kernel::heap_allocator::LockedHoleAllocator\">LockedHoleAllocator</a>","synthetic":true,"types":["kernel::heap_allocator::LockedHoleAllocator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/heap_allocator/struct.HoleInfo.html\" title=\"struct kernel::heap_allocator::HoleInfo\">HoleInfo</a>","synthetic":true,"types":["kernel::heap_allocator::HoleInfo"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/heap_allocator/struct.Hole.html\" title=\"struct kernel::heap_allocator::Hole\">Hole</a>","synthetic":true,"types":["kernel::heap_allocator::Hole"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/heap_allocator/struct.HoleList.html\" title=\"struct kernel::heap_allocator::HoleList\">HoleList</a>","synthetic":true,"types":["kernel::heap_allocator::HoleList"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/heap_allocator/struct.Allocation.html\" title=\"struct kernel::heap_allocator::Allocation\">Allocation</a>","synthetic":true,"types":["kernel::heap_allocator::Allocation"]},{"text":"impl&lt;P&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/memory/struct.KernelStackAllocator.html\" title=\"struct kernel::memory::KernelStackAllocator\">KernelStackAllocator</a>&lt;P&gt;","synthetic":true,"types":["kernel::memory::kernel_stack_allocator::KernelStackAllocator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/memory/struct.SlabAllocator.html\" title=\"struct kernel::memory::SlabAllocator\">SlabAllocator</a>","synthetic":true,"types":["kernel::memory::slab_allocator::SlabAllocator"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/memory/struct.PhysicalMemoryManager.html\" title=\"struct kernel::memory::PhysicalMemoryManager\">PhysicalMemoryManager</a>","synthetic":true,"types":["kernel::memory::PhysicalMemoryManager"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/memory/struct.Stack.html\" title=\"struct kernel::memory::Stack\">Stack</a>","synthetic":true,"types":["kernel::memory::Stack"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/memory/buddy_allocator/struct.BuddyAllocator.html\" title=\"struct kernel::memory::buddy_allocator::BuddyAllocator\">BuddyAllocator</a>","synthetic":true,"types":["kernel::memory::buddy_allocator::BuddyAllocator"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/object/struct.KernelObjectId.html\" title=\"struct kernel::object::KernelObjectId\">KernelObjectId</a>","synthetic":true,"types":["kernel::object::KernelObjectId"]},{"text":"impl&lt;P&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/object/address_space/struct.AddressSpace.html\" title=\"struct kernel::object::address_space::AddressSpace\">AddressSpace</a>&lt;P&gt;","synthetic":true,"types":["kernel::object::address_space::AddressSpace"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"kernel/object/address_space/enum.State.html\" title=\"enum kernel::object::address_space::State\">State</a>","synthetic":true,"types":["kernel::object::address_space::State"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/object/channel/struct.ChannelEnd.html\" title=\"struct kernel::object::channel::ChannelEnd\">ChannelEnd</a>","synthetic":true,"types":["kernel::object::channel::ChannelEnd"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/object/channel/struct.Message.html\" title=\"struct kernel::object::channel::Message\">Message</a>","synthetic":true,"types":["kernel::object::channel::Message"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/object/memory_object/struct.MemoryObject.html\" title=\"struct kernel::object::memory_object::MemoryObject\">MemoryObject</a>","synthetic":true,"types":["kernel::object::memory_object::MemoryObject"]},{"text":"impl&lt;P&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/object/task/struct.Task.html\" title=\"struct kernel::object::task::Task\">Task</a>&lt;P&gt;","synthetic":true,"types":["kernel::object::task::Task"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"kernel/object/task/enum.TaskBlock.html\" title=\"enum kernel::object::task::TaskBlock\">TaskBlock</a>","synthetic":true,"types":["kernel::object::task::TaskBlock"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"kernel/object/task/enum.TaskState.html\" title=\"enum kernel::object::task::TaskState\">TaskState</a>","synthetic":true,"types":["kernel::object::task::TaskState"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"enum\" href=\"kernel/object/task/enum.TaskCreationError.html\" title=\"enum kernel::object::task::TaskCreationError\">TaskCreationError</a>","synthetic":true,"types":["kernel::object::task::TaskCreationError"]},{"text":"impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/scheduler/struct.Scheduler.html\" title=\"struct kernel::scheduler::Scheduler\">Scheduler</a>&lt;P&gt;","synthetic":true,"types":["kernel::scheduler::Scheduler"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/syscall/validation/struct.UserPointer.html\" title=\"struct kernel::syscall::validation::UserPointer\">UserPointer</a>&lt;T&gt;","synthetic":true,"types":["kernel::syscall::validation::UserPointer"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/syscall/validation/struct.UserSlice.html\" title=\"struct kernel::syscall::validation::UserSlice\">UserSlice</a>&lt;'a, T&gt;","synthetic":true,"types":["kernel::syscall::validation::UserSlice"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Freeze.html\" title=\"trait core::marker::Freeze\">Freeze</a> for <a class=\"struct\" href=\"kernel/syscall/validation/struct.UserString.html\" title=\"struct kernel::syscall::validation::UserString\">UserString</a>&lt;'a&gt;","synthetic":true,"types":["kernel::syscall::validation::UserString"]}];
implementors["libpebble"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"libpebble/struct.Handle.html\" title=\"struct libpebble::Handle\">Handle</a>","synthetic":true,"types":["libpebble::Handle"]},{"text":"impl&lt;const N:&nbsp;usize&gt; Freeze for <a class=\"struct\" href=\"libpebble/caps/struct.CapabilitiesRepr.html\" title=\"struct libpebble::caps::CapabilitiesRepr\">CapabilitiesRepr</a>&lt;N&gt;","synthetic":true,"types":["libpebble::caps::CapabilitiesRepr"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/caps/enum.Capability.html\" title=\"enum libpebble::caps::Capability\">Capability</a>","synthetic":true,"types":["libpebble::caps::Capability"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/enum.EarlyLogError.html\" title=\"enum libpebble::syscall::EarlyLogError\">EarlyLogError</a>","synthetic":true,"types":["libpebble::syscall::EarlyLogError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/enum.CreateMemoryObjectError.html\" title=\"enum libpebble::syscall::CreateMemoryObjectError\">CreateMemoryObjectError</a>","synthetic":true,"types":["libpebble::syscall::CreateMemoryObjectError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/enum.MapMemoryObjectError.html\" title=\"enum libpebble::syscall::MapMemoryObjectError\">MapMemoryObjectError</a>","synthetic":true,"types":["libpebble::syscall::MapMemoryObjectError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/enum.SendMessageError.html\" title=\"enum libpebble::syscall::SendMessageError\">SendMessageError</a>","synthetic":true,"types":["libpebble::syscall::SendMessageError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/enum.RegisterServiceError.html\" title=\"enum libpebble::syscall::RegisterServiceError\">RegisterServiceError</a>","synthetic":true,"types":["libpebble::syscall::RegisterServiceError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/enum.SubscribeToServiceError.html\" title=\"enum libpebble::syscall::SubscribeToServiceError\">SubscribeToServiceError</a>","synthetic":true,"types":["libpebble::syscall::SubscribeToServiceError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"libpebble/syscall/get_framebuffer/struct.FramebufferInfo.html\" title=\"struct libpebble::syscall::get_framebuffer::FramebufferInfo\">FramebufferInfo</a>","synthetic":true,"types":["libpebble::syscall::get_framebuffer::FramebufferInfo"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/get_framebuffer/enum.GetFramebufferError.html\" title=\"enum libpebble::syscall::get_framebuffer::GetFramebufferError\">GetFramebufferError</a>","synthetic":true,"types":["libpebble::syscall::get_framebuffer::GetFramebufferError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"libpebble/syscall/get_framebuffer/enum.PixelFormat.html\" title=\"enum libpebble::syscall::get_framebuffer::PixelFormat\">PixelFormat</a>","synthetic":true,"types":["libpebble::syscall::get_framebuffer::PixelFormat"]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Record.html\" title=\"struct log::Record\">Record</a>&lt;'a&gt;","synthetic":true,"types":["log::Record"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.RecordBuilder.html\" title=\"struct log::RecordBuilder\">RecordBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::RecordBuilder"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.Metadata.html\" title=\"struct log::Metadata\">Metadata</a>&lt;'a&gt;","synthetic":true,"types":["log::Metadata"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"log/struct.MetadataBuilder.html\" title=\"struct log::MetadataBuilder\">MetadataBuilder</a>&lt;'a&gt;","synthetic":true,"types":["log::MetadataBuilder"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.SetLoggerError.html\" title=\"struct log::SetLoggerError\">SetLoggerError</a>","synthetic":true,"types":["log::SetLoggerError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"log/struct.ParseLevelError.html\" title=\"struct log::ParseLevelError\">ParseLevelError</a>","synthetic":true,"types":["log::ParseLevelError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":true,"types":["log::Level"]},{"text":"impl Freeze for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":true,"types":["log::LevelFilter"]}];
implementors["num_complex"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.Complex.html\" title=\"struct num_complex::Complex\">Complex</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::Complex"]},{"text":"impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"num_complex/struct.ParseComplexError.html\" title=\"struct num_complex::ParseComplexError\">ParseComplexError</a>&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Freeze,&nbsp;</span>","synthetic":true,"types":["num_complex::ParseComplexError"]}];
implementors["num_integer"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.ExtendedGcd.html\" title=\"struct num_integer::ExtendedGcd\">ExtendedGcd</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::ExtendedGcd"]},{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_integer/struct.IterBinomial.html\" title=\"struct num_integer::IterBinomial\">IterBinomial</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_integer::IterBinomial"]}];
implementors["num_iter"] = [{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.Range.html\" title=\"struct num_iter::Range\">Range</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::Range"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeInclusive.html\" title=\"struct num_iter::RangeInclusive\">RangeInclusive</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeInclusive"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStep.html\" title=\"struct num_iter::RangeStep\">RangeStep</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStep"]},{"text":"impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"num_iter/struct.RangeStepInclusive.html\" title=\"struct num_iter::RangeStepInclusive\">RangeStepInclusive</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Freeze,&nbsp;</span>","synthetic":true,"types":["num_iter::RangeStepInclusive"]}];
implementors["num_rational"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["num_rational::Ratio"]},{"text":"impl Freeze for <a class=\"struct\" href=\"num_rational/struct.ParseRatioError.html\" title=\"struct num_rational::ParseRatioError\">ParseRatioError</a>","synthetic":true,"types":["num_rational::ParseRatioError"]}];
implementors["num_traits"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"num_traits/struct.ParseFloatError.html\" title=\"struct num_traits::ParseFloatError\">ParseFloatError</a>","synthetic":true,"types":["num_traits::ParseFloatError"]},{"text":"impl Freeze for <a class=\"enum\" href=\"num_traits/enum.FloatErrorKind.html\" title=\"enum num_traits::FloatErrorKind\">FloatErrorKind</a>","synthetic":true,"types":["num_traits::FloatErrorKind"]}];
implementors["pebble_util"] = [{"text":"impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"pebble_util/struct.BinaryPrettyPrint.html\" title=\"struct pebble_util::BinaryPrettyPrint\">BinaryPrettyPrint</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["pebble_util::binary_pretty_print::BinaryPrettyPrint"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"pebble_util/struct.InitGuard.html\" title=\"struct pebble_util::InitGuard\">InitGuard</a>&lt;T&gt;","synthetic":true,"types":["pebble_util::init_guard::InitGuard"]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Mutex.html\" title=\"struct spin::Mutex\">Mutex</a>&lt;T&gt;","synthetic":true,"types":["spin::mutex::Mutex"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.MutexGuard.html\" title=\"struct spin::MutexGuard\">MutexGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::mutex::MutexGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.RwLock.html\" title=\"struct spin::RwLock\">RwLock</a>&lt;T&gt;","synthetic":true,"types":["spin::rw_lock::RwLock"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockReadGuard.html\" title=\"struct spin::RwLockReadGuard\">RwLockReadGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockReadGuard"]},{"text":"impl&lt;'a, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; Freeze for <a class=\"struct\" href=\"spin/struct.RwLockWriteGuard.html\" title=\"struct spin::RwLockWriteGuard\">RwLockWriteGuard</a>&lt;'a, T&gt;","synthetic":true,"types":["spin::rw_lock::RwLockWriteGuard"]},{"text":"impl&lt;T&gt; !Freeze for <a class=\"struct\" href=\"spin/struct.Once.html\" title=\"struct spin::Once\">Once</a>&lt;T&gt;","synthetic":true,"types":["spin::once::Once"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()