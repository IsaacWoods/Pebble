(function() {var implementors = {};
implementors["hal"] = [{"text":"impl Freeze for BootInfo","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryMap","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryMapEntry","synthetic":true,"types":[]},{"text":"impl Freeze for LoadedImages","synthetic":true,"types":[]},{"text":"impl Freeze for LoadedImage","synthetic":true,"types":[]},{"text":"impl Freeze for Segment","synthetic":true,"types":[]},{"text":"impl Freeze for VideoModeInfo","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryType","synthetic":true,"types":[]},{"text":"impl Freeze for PixelFormat","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Frame&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Page&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Flags","synthetic":true,"types":[]},{"text":"impl Freeze for PhysicalAddress","synthetic":true,"types":[]},{"text":"impl Freeze for VirtualAddress","synthetic":true,"types":[]},{"text":"impl Freeze for PagingError","synthetic":true,"types":[]},{"text":"impl Freeze for Size4KiB","synthetic":true,"types":[]},{"text":"impl Freeze for Size2MiB","synthetic":true,"types":[]},{"text":"impl Freeze for Size1GiB","synthetic":true,"types":[]},{"text":"impl Freeze for PciAddress","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Freeze for PciHeader&lt;A&gt;","synthetic":true,"types":[]}];
implementors["kernel"] = [{"text":"impl Freeze for HoleAllocator","synthetic":true,"types":[]},{"text":"impl !Freeze for LockedHoleAllocator","synthetic":true,"types":[]},{"text":"impl Freeze for HoleInfo","synthetic":true,"types":[]},{"text":"impl Freeze for Hole","synthetic":true,"types":[]},{"text":"impl Freeze for HoleList","synthetic":true,"types":[]},{"text":"impl Freeze for Allocation","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; !Freeze for KernelStackAllocator&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SlabAllocator","synthetic":true,"types":[]},{"text":"impl !Freeze for PhysicalMemoryManager","synthetic":true,"types":[]},{"text":"impl Freeze for Stack","synthetic":true,"types":[]},{"text":"impl Freeze for BuddyAllocator","synthetic":true,"types":[]},{"text":"impl Freeze for KernelObjectId","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; !Freeze for AddressSpace&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl Freeze for ChannelEnd","synthetic":true,"types":[]},{"text":"impl Freeze for Message","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryObject","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; !Freeze for Task&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for TaskBlock","synthetic":true,"types":[]},{"text":"impl Freeze for TaskState","synthetic":true,"types":[]},{"text":"impl Freeze for TaskCreationError","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Freeze for Scheduler&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for UserPointer&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Freeze for UserSlice&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for UserString&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["libpebble"] = [{"text":"impl Freeze for Handle","synthetic":true,"types":[]},{"text":"impl&lt;const N:&nbsp;usize&gt; Freeze for CapabilitiesRepr&lt;N&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Capability","synthetic":true,"types":[]},{"text":"impl Freeze for EarlyLogError","synthetic":true,"types":[]},{"text":"impl Freeze for CreateMemoryObjectError","synthetic":true,"types":[]},{"text":"impl Freeze for MapMemoryObjectError","synthetic":true,"types":[]},{"text":"impl Freeze for SendMessageError","synthetic":true,"types":[]},{"text":"impl Freeze for RegisterServiceError","synthetic":true,"types":[]},{"text":"impl Freeze for SubscribeToServiceError","synthetic":true,"types":[]},{"text":"impl Freeze for FramebufferInfo","synthetic":true,"types":[]},{"text":"impl Freeze for GetFramebufferError","synthetic":true,"types":[]},{"text":"impl Freeze for PixelFormat","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; Freeze for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Freeze for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Freeze for Level","synthetic":true,"types":[]},{"text":"impl Freeze for LevelFilter","synthetic":true,"types":[]}];
implementors["num_traits"] = [{"text":"impl Freeze for ParseFloatError","synthetic":true,"types":[]},{"text":"impl Freeze for FloatErrorKind","synthetic":true,"types":[]}];
implementors["pebble_util"] = [{"text":"impl&lt;T&gt; Freeze for BinaryPrettyPrint&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for InitGuard&lt;T&gt;","synthetic":true,"types":[]}];
implementors["spin"] = [{"text":"impl&lt;T&gt; !Freeze for Mutex&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for MutexGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for RwLock&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockReadGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Freeze for RwLockWriteGuard&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Freeze for Once&lt;T&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()