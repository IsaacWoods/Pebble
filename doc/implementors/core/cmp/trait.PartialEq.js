(function() {var implementors = {};
implementors["hal"] = [{"text":"impl PartialEq&lt;MemoryType&gt; for MemoryType","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PixelFormat&gt; for PixelFormat","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PartialEq&gt; PartialEq&lt;Frame&lt;S&gt;&gt; for Frame&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: FrameSize,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;PartialEq + FrameSize&gt; PartialEq&lt;Page&lt;S&gt;&gt; for Page&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Flags&gt; for Flags","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PhysicalAddress&gt; for PhysicalAddress","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;VirtualAddress&gt; for VirtualAddress","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Size4KiB&gt; for Size4KiB","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Size2MiB&gt; for Size2MiB","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Size1GiB&gt; for Size1GiB","synthetic":false,"types":[]}];
implementors["kernel"] = [{"text":"impl PartialEq&lt;State&gt; for State","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;TaskBlock&gt; for TaskBlock","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;TaskState&gt; for TaskState","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;KernelObjectId&gt; for KernelObjectId","synthetic":false,"types":[]}];
implementors["libpebble"] = [{"text":"impl PartialEq&lt;Capability&gt; for Capability","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PixelFormat&gt; for PixelFormat","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PciGetInfoError&gt; for PciGetInfoError","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Handle&gt; for Handle","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl PartialEq&lt;Level&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;LevelFilter&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;LevelFilter&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Level&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialEq&lt;Metadata&lt;'a&gt;&gt; for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialEq&lt;MetadataBuilder&lt;'a&gt;&gt; for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;ParseLevelError&gt; for ParseLevelError","synthetic":false,"types":[]}];
implementors["pci_types"] = [{"text":"impl PartialEq&lt;DeviceType&gt; for DeviceType","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;UsbType&gt; for UsbType","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;PciAddress&gt; for PciAddress","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl PartialEq&lt;Delimiter&gt; for Delimiter","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Spacing&gt; for Spacing","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Ident&gt; for Ident","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; PartialEq&lt;T&gt; for Ident <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: AsRef&lt;str&gt;,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["ptah"] = [{"text":"impl PartialEq&lt;Error&gt; for Error","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl PartialEq&lt;Error&gt; for Error","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialEq&lt;Unexpected&lt;'a&gt;&gt; for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl PartialEq&lt;Member&gt; for Member","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Index&gt; for Index","synthetic":false,"types":[]},{"text":"impl PartialEq&lt;Lifetime&gt; for Lifetime","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialEq&lt;Cursor&lt;'a&gt;&gt; for Cursor&lt;'a&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()